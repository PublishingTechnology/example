/* Generated By:JJTree: Do not edit this line. ASTstringorphraseorgroup.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY= */
package com.ingenta.search.parse;

import java.util.ArrayList;
import java.util.List;

import com.ingenta.search.domain.*;

public class ASTstringorphraseorgroup extends SimpleNode {
  public ASTstringorphraseorgroup(int id) {
    super(id);
  }

  public ASTstringorphraseorgroup(SearchExpressionParser p, int id) {
    super(p, id);
  }

  public void interpret() {

        for (int i = 0; i < jjtGetNumChildren(); i++){


            jjtGetChild(i).interpret();
		}

  }

  public List<SearchTerm> getSearchTermList(){

  	List<SearchTerm> searchTermList = new ArrayList<SearchTerm>();

  	for (int i = 0; i < jjtGetNumChildren(); i++){

  		Node[] nodes = children;

  		if( ((SimpleNode)nodes[i]).id == SearchExpressionParserTreeConstants.JJTSTRINGORPHRASEORGROUP ){
  			searchTermList.addAll(((SimpleNode)jjtGetChild(i)).getSearchTermList());
  		}
  		else{
  			searchTermList.add(((SimpleNode)jjtGetChild(i)).getSearchTerm());
  		}
  	}

  	return searchTermList;

  }
}
/* JavaCC - OriginalChecksum=1157fa28bc7dc0fb2bda6f2e9406925b (do not edit this line) */
