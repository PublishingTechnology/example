/* Generated By:JJTree: Do not edit this line. ASTgroup.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY= */
package com.ingenta.search.parse;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;

import com.ingenta.search.domain.SearchTerm;
import com.ingenta.search.domain.SearchTermGroup;

public class ASTgroup extends SimpleNode {
   
   private static final Logger LOG = Logger.getLogger(ASTgroup.class);
                     
  public ASTgroup(int id) {
    super(id);
  }

  public ASTgroup(SearchExpressionParser p, int id) {
    super(p, id);
  }

  public void interpret() {

	  	LOG.log(Level.DEBUG, "(");

        for (int i = 0; i < jjtGetNumChildren(); i++){


            jjtGetChild(i).interpret();
		}

		LOG.log(Level.DEBUG, ")");

  }

  public SearchTerm getSearchTerm(){

	  SearchTermGroup searchTermGroup = new SearchTermGroup();

	  List<SearchTerm> searchTermList = new ArrayList<SearchTerm>();

        for (int i = 0; i < jjtGetNumChildren(); i++){

        	Node[] nodes = children;

				if( ((SimpleNode)nodes[i]).id == SearchExpressionParserTreeConstants.JJTSTRINGORPHRASEORGROUP ){
					searchTermList.addAll(((SimpleNode)jjtGetChild(i)).getSearchTermList());
				}
				else{
					searchTermList.add(((SimpleNode)jjtGetChild(i)).getSearchTerm());
				}
		}
		searchTermGroup.addSearchTerms(searchTermList);
		return searchTermGroup;
  }


}
/* JavaCC - OriginalChecksum=b988927ef4190c73505aba30c009bd6f (do not edit this line) */
